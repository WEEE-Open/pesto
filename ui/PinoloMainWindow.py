# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'assets/qt/PinoloMainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(960, 665)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(864, 581))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("assets/qt/../icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(True)
        MainWindow.setStyleSheet("")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setChildrenCollapsible(False)
        self.splitter.setObjectName("splitter")
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(6)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.diskTable = QtWidgets.QTableWidget(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.diskTable.sizePolicy().hasHeightForWidth())
        self.diskTable.setSizePolicy(sizePolicy)
        self.diskTable.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.diskTable.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.diskTable.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.diskTable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.diskTable.setAutoScroll(False)
        self.diskTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.diskTable.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.diskTable.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.diskTable.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.diskTable.setShowGrid(False)
        self.diskTable.setGridStyle(QtCore.Qt.NoPen)
        self.diskTable.setCornerButtonEnabled(False)
        self.diskTable.setColumnCount(3)
        self.diskTable.setObjectName("diskTable")
        self.diskTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.diskTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.diskTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.diskTable.setHorizontalHeaderItem(2, item)
        self.diskTable.horizontalHeader().setSortIndicatorShown(False)
        self.diskTable.horizontalHeader().setStretchLastSection(True)
        self.diskTable.verticalHeader().setVisible(False)
        self.diskTable.verticalHeader().setSortIndicatorShown(True)
        self.verticalLayout_3.addWidget(self.diskTable)
        self.standardProcedureButton = QtWidgets.QPushButton(self.layoutWidget)
        self.standardProcedureButton.setMaximumSize(QtCore.QSize(16777215, 30))
        icon = QtGui.QIcon.fromTheme("edit-delete")
        self.standardProcedureButton.setIcon(icon)
        self.standardProcedureButton.setObjectName("standardProcedureButton")
        self.verticalLayout_3.addWidget(self.standardProcedureButton)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.refreshButton = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.refreshButton.sizePolicy().hasHeightForWidth())
        self.refreshButton.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon.fromTheme("media-playlist-repeat")
        self.refreshButton.setIcon(icon)
        self.refreshButton.setObjectName("refreshButton")
        self.horizontalLayout.addWidget(self.refreshButton)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.eraseButton = QtWidgets.QPushButton(self.layoutWidget)
        self.eraseButton.setMinimumSize(QtCore.QSize(100, 0))
        self.eraseButton.setMaximumSize(QtCore.QSize(16777215, 30))
        self.eraseButton.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        icon = QtGui.QIcon.fromTheme("edit-clear")
        self.eraseButton.setIcon(icon)
        self.eraseButton.setObjectName("eraseButton")
        self.verticalLayout_4.addWidget(self.eraseButton)
        self.smartCheckButton = QtWidgets.QPushButton(self.layoutWidget)
        self.smartCheckButton.setMaximumSize(QtCore.QSize(16777215, 30))
        self.smartCheckButton.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        icon = QtGui.QIcon.fromTheme("drive-harddisk")
        self.smartCheckButton.setIcon(icon)
        self.smartCheckButton.setObjectName("smartCheckButton")
        self.verticalLayout_4.addWidget(self.smartCheckButton)
        self.loadSystemButton = QtWidgets.QPushButton(self.layoutWidget)
        self.loadSystemButton.setMaximumSize(QtCore.QSize(16777215, 30))
        icon = QtGui.QIcon.fromTheme("go-up")
        self.loadSystemButton.setIcon(icon)
        self.loadSystemButton.setObjectName("loadSystemButton")
        self.verticalLayout_4.addWidget(self.loadSystemButton)
        self.horizontalLayout.addLayout(self.verticalLayout_4)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.queueTable = QtWidgets.QTableView(self.splitter)
        self.queueTable.setMinimumSize(QtCore.QSize(580, 0))
        self.queueTable.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.queueTable.setAutoFillBackground(False)
        self.queueTable.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.queueTable.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.queueTable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.queueTable.setAutoScroll(False)
        self.queueTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.queueTable.setDragEnabled(False)
        self.queueTable.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)
        self.queueTable.setAlternatingRowColors(False)
        self.queueTable.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.queueTable.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.queueTable.setShowGrid(False)
        self.queueTable.setGridStyle(QtCore.Qt.NoPen)
        self.queueTable.setSortingEnabled(False)
        self.queueTable.setCornerButtonEnabled(True)
        self.queueTable.setObjectName("queueTable")
        self.queueTable.horizontalHeader().setStretchLastSection(True)
        self.queueTable.verticalHeader().setVisible(False)
        self.verticalLayout_5.addWidget(self.splitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 960, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuSettings = QtWidgets.QMenu(self.menuBar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menuBar)
        self.newSessionAction = QtWidgets.QAction(MainWindow)
        self.newSessionAction.setObjectName("newSessionAction")
        self.actionRefresh = QtWidgets.QAction(MainWindow)
        self.actionRefresh.setObjectName("actionRefresh")
        self.exitAction = QtWidgets.QAction(MainWindow)
        self.exitAction.setObjectName("exitAction")
        self.actionNetworkSettings = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("network-wired")
        self.actionNetworkSettings.setIcon(icon)
        self.actionNetworkSettings.setObjectName("actionNetworkSettings")
        self.actionAboutUs = QtWidgets.QAction(MainWindow)
        self.actionAboutUs.setObjectName("actionAboutUs")
        self.actionSourceCode = QtWidgets.QAction(MainWindow)
        self.actionSourceCode.setObjectName("actionSourceCode")
        self.actionVersion = QtWidgets.QAction(MainWindow)
        self.actionVersion.setObjectName("actionVersion")
        self.actionSleep = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("face-tired")
        self.actionSleep.setIcon(icon)
        self.actionSleep.setObjectName("actionSleep")
        self.actionUpload_to_Tarallo = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("emblem-synchronized")
        self.actionUpload_to_Tarallo.setIcon(icon)
        self.actionUpload_to_Tarallo.setObjectName("actionUpload_to_Tarallo")
        self.actionUmount = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("drive-removable-media")
        self.actionUmount.setIcon(icon)
        self.actionUmount.setObjectName("actionUmount")
        self.actionShow_SMART_data = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("drive-harddisk")
        self.actionShow_SMART_data.setIcon(icon)
        self.actionShow_SMART_data.setObjectName("actionShow_SMART_data")
        self.actionTheme = QtWidgets.QAction(MainWindow)
        self.actionTheme.setObjectName("actionTheme")
        self.actionStop = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("process-stop")
        self.actionStop.setIcon(icon)
        self.actionStop.setObjectName("actionStop")
        self.actionRemove = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("list-remove")
        self.actionRemove.setIcon(icon)
        self.actionRemove.setObjectName("actionRemove")
        self.actionRemove_All = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("user-trash")
        self.actionRemove_All.setIcon(icon)
        self.actionRemove_All.setObjectName("actionRemove_All")
        self.actionRemove_completed = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("emblem-default")
        self.actionRemove_completed.setIcon(icon)
        self.actionRemove_completed.setObjectName("actionRemove_completed")
        self.actionRemove_Queued = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open-recent")
        self.actionRemove_Queued.setIcon(icon)
        self.actionRemove_Queued.setObjectName("actionRemove_Queued")
        self.actionInfo = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("dialog-information")
        self.actionInfo.setIcon(icon)
        self.actionInfo.setObjectName("actionInfo")
        self.menuSettings.addAction(self.actionNetworkSettings)
        self.menuSettings.addAction(self.actionTheme)
        self.menuHelp.addAction(self.actionAboutUs)
        self.menuHelp.addAction(self.actionSourceCode)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionVersion)
        self.menuBar.addAction(self.menuSettings.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Pinolo"))
        self.diskTable.setSortingEnabled(True)
        item = self.diskTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Drive"))
        item = self.diskTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Tarallo ID"))
        item = self.diskTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Size"))
        self.standardProcedureButton.setToolTip(_translate("MainWindow", "Ctrl+S"))
        self.standardProcedureButton.setText(_translate("MainWindow", "Standard procedure"))
        self.standardProcedureButton.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.refreshButton.setText(_translate("MainWindow", "Refresh"))
        self.eraseButton.setToolTip(_translate("MainWindow", "Ctrl+E"))
        self.eraseButton.setText(_translate("MainWindow", "Erase"))
        self.eraseButton.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.smartCheckButton.setToolTip(_translate("MainWindow", "Ctrl+Alt+S"))
        self.smartCheckButton.setText(_translate("MainWindow", "Smart check"))
        self.smartCheckButton.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.loadSystemButton.setToolTip(_translate("MainWindow", "Ctrl+C"))
        self.loadSystemButton.setText(_translate("MainWindow", "Load system"))
        self.loadSystemButton.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.newSessionAction.setText(_translate("MainWindow", "New session"))
        self.newSessionAction.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionRefresh.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.exitAction.setText(_translate("MainWindow", "Exit"))
        self.actionNetworkSettings.setText(_translate("MainWindow", "Network settings"))
        self.actionNetworkSettings.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionAboutUs.setText(_translate("MainWindow", "About WEEE Open"))
        self.actionSourceCode.setText(_translate("MainWindow", "Source code"))
        self.actionVersion.setText(_translate("MainWindow", "Version"))
        self.actionSleep.setText(_translate("MainWindow", "Sleep"))
        self.actionUpload_to_Tarallo.setText(_translate("MainWindow", "Upload to Tarallo"))
        self.actionUmount.setText(_translate("MainWindow", "Umount"))
        self.actionShow_SMART_data.setText(_translate("MainWindow", "Show SMART data"))
        self.actionTheme.setText(_translate("MainWindow", "Theme"))
        self.actionStop.setText(_translate("MainWindow", "Stop"))
        self.actionRemove.setText(_translate("MainWindow", "Remove"))
        self.actionRemove_All.setText(_translate("MainWindow", "Remove All"))
        self.actionRemove_completed.setText(_translate("MainWindow", "Remove completed"))
        self.actionRemove_Queued.setText(_translate("MainWindow", "Remove Queued"))
        self.actionInfo.setText(_translate("MainWindow", "Info"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
